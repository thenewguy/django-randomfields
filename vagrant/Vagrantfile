host = RbConfig::CONFIG['host_os']
HOST_IS_MAC = host =~ /darwin/
HOST_IS_LINUX = host =~ /linux/
HOST_IS_WINDOWS = host =~ /mswin|mingw|cygwin/

if HOST_IS_MAC
    HOST_MEM = `sysctl -n hw.memsize`.to_i / 1024 / 1024
    HOST_CPUS = `sysctl -n hw.ncpu`.to_i
elsif HOST_IS_LINUX
    HOST_MEM = `grep 'MemTotal' /proc/meminfo | sed -e 's/MemTotal://' -e 's/ kB//'`.to_i / 1024
    HOST_CPUS = `nproc`.to_i
elsif HOST_IS_WINDOWS
    HOST_MEM = `wmic computersystem Get TotalPhysicalMemory`.split[1].to_i / 1024 / 1024
    HOST_CPUS = `wmic cpu Get NumberOfCores`.split[1].to_i
end

Vagrant.configure("2") do |config|
    config.vm.box = "hashicorp/bionic64"

    cpus = HOST_CPUS
    if 7000 < HOST_MEM
        mem = 4096
    else
        mem = 2048
    end

    config.vm.provider "virtualbox" do |v|
      v.name = "django-randomfields"
      v.memory = mem
      v.cpus = cpus
      if cpus > 1
        v.customize ["modifyvm", :id, "--ioapic", "on"]
      end
      v.customize ["modifyvm", :id, "--cpuexecutioncap", "75"]
    end


    config.vm.provision :shell, path: "provision.sh"
    
    config.vm.synced_folder ".", "/vagrant", disabled: true
    if Vagrant::Util::Platform.windows? then
        config.vm.synced_folder "../", "/vagrant", type: 'smb', mount_options: ["mfsymlinks"]
    else
        config.vm.synced_folder "../", "/vagrant"
    end
    
    
    # forward ports as listed in vagrant/vagrant/rebuild.sh
    #
    ##
    ##
    ##  THIS ALLOWS THE WEB BROWSER ON THE HOST MACHINE
    ##  TO COMMUNICATE VIA '127.0.0.1' or 'localhost'
    ##  i.e. `curl -i http://127.0.0.1:8080/`
    ##
    ##  THIS ALSO ALLOWS NETWORKED MACHINES TO ACCESS FORWARDED
    ##  PORTS VIA THE HOST
    ##  i.e. `curl -i http://host-ip-or-fqdn:8080/
    ##
    ##
    
    # responder http (use 8080 to avoid sudo requirement)
    config.vm.network "forwarded_port", guest: 80, host: 8080

end
